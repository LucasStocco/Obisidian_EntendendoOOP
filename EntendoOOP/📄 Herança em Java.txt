üìÑ Heran√ßa em Java
1. O que √© Heran√ßa?

Heran√ßa √© outro pilar da Programa√ß√£o Orientada a Objetos (POO).
Ela permite que uma classe (subclasse ou classe filha) herde atributos e m√©todos de outra classe (superclasse ou classe pai).

Isso promove reaproveitamento de c√≥digo, organiza√ß√£o e facilita a manuten√ß√£o.

2. Conceitos Principais

Superclasse (Classe Pai): a classe que fornece os atributos e m√©todos.

Subclasse (Classe Filha): a classe que herda da superclasse.

Palavra-chave extends: usada para indicar heran√ßa em Java.

Sobrescrita de m√©todos (@Override): permite que a subclasse forne√ßa uma implementa√ß√£o diferente de um m√©todo da superclasse.

3. Exemplo Pr√°tico
Classe Pai (Superclasse):
// Classe Animal
public class Animal {
    private String nome;

    public Animal(String nome) {
        this.nome = nome;
    }

    public String getNome() {
        return nome;
    }

    public void emitirSom() {
        System.out.println("O animal faz um som...");
    }
}

Classe Filha (Subclasse):
// Classe Cachorro herda de Animal
public class Cachorro extends Animal {

    public Cachorro(String nome) {
        super(nome); // chama o construtor da superclasse
    }

    // Sobrescrevendo o m√©todo emitirSom
    @Override
    public void emitirSom() {
        System.out.println(getNome() + " est√° latindo: Au Au!");
    }
}

// Classe Gato herda de Animal
public class Gato extends Animal {

    public Gato(String nome) {
        super(nome);
    }

    @Override
    public void emitirSom() {
        System.out.println(getNome() + " est√° miando: Miau!");
    }
}

Classe Principal (Testando a Heran√ßa):
public class Main {
    public static void main(String[] args) {
        // Criando objetos das subclasses
        Cachorro dog = new Cachorro("Rex");
        Gato cat = new Gato("Mimi");

        // Chamando m√©todos herdados e sobrescritos
        dog.emitirSom(); // Rex est√° latindo: Au Au!
        cat.emitirSom(); // Mimi est√° miando: Miau!

        // M√©todos herdados da classe Animal
        System.out.println("Nome do cachorro: " + dog.getNome());
        System.out.println("Nome do gato: " + cat.getNome());
    }
}

4. Resumindo

Heran√ßa = reuso de c√≥digo entre classes.

A subclasse herda atributos e m√©todos da superclasse.

Usa-se a palavra-chave extends.

M√©todos podem ser sobrescritos com @Override.

Permite criar uma hierarquia de classes (exemplo: Animal ‚Üí Mam√≠fero ‚Üí Cachorro).