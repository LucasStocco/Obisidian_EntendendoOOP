ğŸ“˜ Classes e Objetos em Java
ğŸ”¹ 1. O que Ã© uma Classe?

Uma classe Ã© como um molde ou modelo que descreve as caracterÃ­sticas e comportamentos de algo no mundo real.

CaracterÃ­sticas â†’ representadas por atributos (variÃ¡veis da classe).

Comportamentos â†’ representados por mÃ©todos (funÃ§Ãµes dentro da classe).

ğŸ‘‰ Pense em uma classe como a planta de uma casa: ela nÃ£o Ã© a casa em si, mas contÃ©m todas as instruÃ§Ãµes para construÃ­-la.

Estrutura bÃ¡sica de uma classe em Java:
public class Pessoa {
    // Atributos
    String nome;
    int idade;

    // MÃ©todo
    public void apresentar() {
        System.out.println("OlÃ¡, meu nome Ã© " + nome + " e tenho " + idade + " anos.");
    }
}

ğŸ”¹ 2. O que Ã© um Objeto?

Um objeto Ã© uma instÃ¢ncia de uma classe.
Ou seja, quando vocÃª cria um objeto, estÃ¡ construindo algo real a partir do molde da classe.

ğŸ‘‰ Seguindo o exemplo: se a classe Ã© a planta da casa, o objeto Ã© a casa construÃ­da.

Criando um objeto em Java:
public class Main {
    public static void main(String[] args) {
        // Criando objetos a partir da classe Pessoa
        Pessoa p1 = new Pessoa();
        Pessoa p2 = new Pessoa();

        // Definindo valores para os atributos
        p1.nome = "Lucas";
        p1.idade = 20;

        p2.nome = "Ana";
        p2.idade = 25;

        // Chamando mÃ©todos dos objetos
        p1.apresentar();
        p2.apresentar();
    }
}

SaÃ­da:
OlÃ¡, meu nome Ã© Lucas e tenho 20 anos.
OlÃ¡, meu nome Ã© Ana e tenho 25 anos.

ğŸ”¹ 3. DiferenÃ§a entre Classe e Objeto
Classe	Objeto
Ã‰ um molde/modelo	Ã‰ uma instÃ¢ncia concreta
Define atributos e mÃ©todos	Tem valores prÃ³prios para atributos
NÃ£o ocupa memÃ³ria diretamente	Ocupa memÃ³ria quando criado com new
Exemplo: Pessoa	Exemplo: Pessoa p1 = new Pessoa();
ğŸ”¹ 4. VÃ¡rios Objetos de uma Mesma Classe

Uma classe pode gerar vÃ¡rios objetos diferentes, cada um com seus prÃ³prios valores.

Pessoa p1 = new Pessoa();
Pessoa p2 = new Pessoa();
Pessoa p3 = new Pessoa();


Mesmo que todos venham do mesmo molde, cada objeto Ã© independente dos outros.

ğŸ”¹ 5. Relacionando com POO

As classes e objetos sÃ£o a base da ProgramaÃ§Ã£o Orientada a Objetos.
A partir deles, entram os outros pilares:

Encapsulamento â†’ proteger os atributos.

HeranÃ§a â†’ reaproveitar classes.

Polimorfismo â†’ mesmo mÃ©todo, diferentes comportamentos.

AbstraÃ§Ã£o â†’ focar no que Ã© essencial.

âœ… Resumo Final:

Classe = modelo que define atributos e mÃ©todos.

Objeto = instÃ¢ncia real de uma classe.

Em Java, usamos new para criar objetos.